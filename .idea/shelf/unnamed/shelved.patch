Index: src/dev/nqhuy/java/Common.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.nqhuy.java;\r/*\r * Created by Chang Bee on 6/2/2017.\r */\r\rimport java.lang.reflect.Field;\r\rpublic class Common<T> {\r\r    /*Test Generic in Java*/\r    public <A> void unitTest(A x) {\r        if (x instanceof String) {\r            System.out.println(\"Là 1 Chuỗi: \" + x);\r        } else {\r            System.out.println(\"Không phải là chuỗi\");\r        }\r    }\r\r    public void displayInfo2(T object) {\r        try {\r            //Các trường các thộc tính private của Class Object\r            Field tt[] = object.getClass().getDeclaredFields();\r            //Duyệt các thuộc tính và lấy ra các giá trị của nó\r            for (Field field : tt) {\r                String fieldName = field.getName();// Tên Thuộc tính\r                //Lấy ra các field mà chúng ta có thể lấy\r                Field myField = object.getClass().getDeclaredField(fieldName);\r                //Cho phép truy cập vào thuộc tính đó\r                myField.setAccessible(true);\r                //Giá trị thuộc tính\r                System.out.print(fieldName + \": \" + myField.get(object) + \"\\t\");\r            }\r        } catch (NoSuchFieldException e) {\r            e.printStackTrace();\r        } catch (IllegalAccessException e) {\r            e.printStackTrace();\r        } finally {\r            System.out.println();\r        }\r    }\r\r    /*\r    * Phương thức viết tổng quát dùng kỹ thuật reflection để lấy ra các giá trị của thuộc tính trong Object đó\r    *\r    * */\r    public static void displayInfo(Object object) {\r        try {\r            //Các trường các thộc tính private của Class Object\r            Field tt[] = object.getClass().getDeclaredFields();\r            //Duyệt các thuộc tính và lấy ra các giá trị của nó\r            for (Field field : tt) {\r                String fieldName = field.getName();// Tên Thuộc tính\r                //Lấy ra các field mà chúng ta có thể lấy\r                Field myField = object.getClass().getDeclaredField(fieldName);\r                //Cho phép truy cập vào thuộc tính đó\r                myField.setAccessible(true);\r                //Giá trị thuộc tính\r                System.out.print(fieldName + \": \" + myField.get(object) + \"\\t\");\r            }\r        } catch (NoSuchFieldException e) {\r            e.printStackTrace();\r        } catch (IllegalAccessException e) {\r            e.printStackTrace();\r        } finally {\r            System.out.println();\r        }\r    }\r\r    /*\r    * Không phụ thuộc vào object có bao nhiêu thuộc tính\r    * hay là kiêu dữ liệu là gì\r    * */\r    public static void copyObject(Object src, Object dst) {\r        // Bước 1: lấy các thuộc tính của nguồn: Tên và giá trị\r        try {\r            Field ttSRC[] = src.getClass().getDeclaredFields();\r            for (Field fieldSRC : ttSRC) {\r                String fieldName = fieldSRC.getName(); // Tên Thuộc tính\r\r                // Thuộc tính của nguồn từ name\r                Field fSRC = src.getClass().getDeclaredField(fieldName);\r                fSRC.setAccessible(true);\r                // Thuộc tính của đích theo tt nguồn\r\r                Field fDST = dst.getClass().getDeclaredField(fieldName);\r                fDST.setAccessible(true);\r\r                if (fDST != null) {\r                    // Thuộc tính nguồn giống thuộc tính đích\r                    // tức là 2 object có chung 1 class hay chung 1 Object chuyền đến\r                    fDST.set(dst, fSRC.get(src));\r                }\r            }\r        } catch (NoSuchFieldException e) {\r            e.printStackTrace();\r        } catch (IllegalAccessException e) {\r            e.printStackTrace();\r        }\r    }\r\r}\r
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/dev/nqhuy/java/Common.java	(date 1496387294000)
+++ src/dev/nqhuy/java/Common.java	(revision )
@@ -7,6 +7,7 @@
  public class Common<T> { +     /*Test Generic in Java*/     public <A> void unitTest(A x) {         if (x instanceof String) {@@ -98,4 +99,4 @@
         }     } -}
\ No newline at end of file
+}